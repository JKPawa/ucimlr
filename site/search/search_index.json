{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"UCI Machine Learning Repository - an API This is a python package to enable easy access to datasets in the UCI Machine Learning Repository. The project is at an early alpha stage, so suggestion for changes or additions are very welcome. Please post an issue on the git repository . Basic usage from ucimlr import datasets abalone = datasets.Abalone() print(abalone.type) >>> regression print(len(abalone)) >>> 3341 Independent and dependent variables are accessed as numpy arrays: print(abalone.x.shape) >>> (3341, 10) print(abalone.y.shape) >>> (3341, 1) Or by element access: x, y = dataset[0]","title":"Home"},{"location":"#uci-machine-learning-repository-an-api","text":"This is a python package to enable easy access to datasets in the UCI Machine Learning Repository. The project is at an early alpha stage, so suggestion for changes or additions are very welcome. Please post an issue on the git repository .","title":"UCI Machine Learning Repository - an API"},{"location":"#basic-usage","text":"from ucimlr import datasets abalone = datasets.Abalone() print(abalone.type) >>> regression print(len(abalone)) >>> 3341 Independent and dependent variables are accessed as numpy arrays: print(abalone.x.shape) >>> (3341, 10) print(abalone.y.shape) >>> (3341, 1) Or by element access: x, y = dataset[0]","title":"Basic usage"},{"location":"datasets/","text":"ucimlr.datasets Abalone class Abalone(Dataset): | Abalone(root, train=True) Link to the dataset description . Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. Adult class Adult(Dataset): | Adult(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. AirQuality class AirQuality(Dataset): | AirQuality(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. APSFailure class APSFailure(Dataset): | APSFailure(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. Avila class Avila(Dataset): | Avila(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. BankMarketing class BankMarketing(Dataset): | BankMarketing(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. BlogFeedback class BlogFeedback(Dataset): | BlogFeedback(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. CardDefault class CardDefault(Dataset): | CardDefault(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. CTSlices class CTSlices(Dataset): | CTSlices(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. FacebookComments class FacebookComments(Dataset): | FacebookComments(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. Landsat class Landsat(Dataset): | Landsat(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. LetterRecognition class LetterRecognition(Dataset): | LetterRecognition(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. MagicGamma class MagicGamma(Dataset): | MagicGamma(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. OnlineNews class OnlineNews(Dataset): | OnlineNews(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. Parkinson class Parkinson(Dataset): | Parkinson(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. PowerPlant class PowerPlant(Dataset): | PowerPlant(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. SensorLessDrive class SensorLessDrive(Dataset): | SensorLessDrive(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. Shuttle class Shuttle(Dataset): | Shuttle(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set. Superconductivity class Superconductivity(Dataset): | Superconductivity(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"ucimlr.datasets"},{"location":"datasets/#ucimlrdatasets","text":"","title":"ucimlr.datasets"},{"location":"datasets/#abalone","text":"class Abalone(Dataset): | Abalone(root, train=True) Link to the dataset description . Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Abalone"},{"location":"datasets/#adult","text":"class Adult(Dataset): | Adult(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Adult"},{"location":"datasets/#airquality","text":"class AirQuality(Dataset): | AirQuality(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"AirQuality"},{"location":"datasets/#apsfailure","text":"class APSFailure(Dataset): | APSFailure(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"APSFailure"},{"location":"datasets/#avila","text":"class Avila(Dataset): | Avila(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Avila"},{"location":"datasets/#bankmarketing","text":"class BankMarketing(Dataset): | BankMarketing(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"BankMarketing"},{"location":"datasets/#blogfeedback","text":"class BlogFeedback(Dataset): | BlogFeedback(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"BlogFeedback"},{"location":"datasets/#carddefault","text":"class CardDefault(Dataset): | CardDefault(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"CardDefault"},{"location":"datasets/#ctslices","text":"class CTSlices(Dataset): | CTSlices(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"CTSlices"},{"location":"datasets/#facebookcomments","text":"class FacebookComments(Dataset): | FacebookComments(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"FacebookComments"},{"location":"datasets/#landsat","text":"class Landsat(Dataset): | Landsat(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Landsat"},{"location":"datasets/#letterrecognition","text":"class LetterRecognition(Dataset): | LetterRecognition(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"LetterRecognition"},{"location":"datasets/#magicgamma","text":"class MagicGamma(Dataset): | MagicGamma(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"MagicGamma"},{"location":"datasets/#onlinenews","text":"class OnlineNews(Dataset): | OnlineNews(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"OnlineNews"},{"location":"datasets/#parkinson","text":"class Parkinson(Dataset): | Parkinson(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Parkinson"},{"location":"datasets/#powerplant","text":"class PowerPlant(Dataset): | PowerPlant(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"PowerPlant"},{"location":"datasets/#sensorlessdrive","text":"class SensorLessDrive(Dataset): | SensorLessDrive(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"SensorLessDrive"},{"location":"datasets/#shuttle","text":"class Shuttle(Dataset): | Shuttle(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Shuttle"},{"location":"datasets/#superconductivity","text":"class Superconductivity(Dataset): | Superconductivity(root, train=True) Parameters root ( str ): Local path for storing/reading dataset files. train ( bool ): Whether to contain training or test set.","title":"Superconductivity"}]}